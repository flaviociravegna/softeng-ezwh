Server listening at http://localhost:3001


  wait for db connection
    ✔ Connection to db done

  API Test: InternalOrders
    Removing all Internal Orders
      ✔ Getting Internal Orders
    removing all skuitems
      ✔ Getting SKUitems
    Removing all SKUs
      ✔ Getting SKUs
    POST /api/sku
      ✔ Inserting a new SKU
      ✔ Inserting a new SKU
      ✔ Inserting a new SKU
      ✔ Inserting a new SKU
    POST /api/skuitem (success)
      ✔ Inserting a new SKU Item
    POST /api/internalOrders
      ✔ Inserting a new InternalOrder (40ms)
      ✔ Inserting a new InternalOrder
      ✔ Inserting a new InternalOrder (38ms)
      ✔ Inserting a new InternalOrder (44ms)
    POST /api/internalOrders(erros)
      ✔ Inserting a new InternalOrder
      ✔ Inserting a new InternalOrder
      ✔ Inserting a new InternalOrder
      ✔ Inserting a new InternalOrder
      ✔ Inserting a new InternalOrder
      ✔ Inserting a new InternalOrder
      ✔ Inserting a new InternalOrder
      ✔ Inserting a new InternalOrder
      ✔ Inserting a new InternalOrder
      ✔ Inserting a new InternalOrder
      ✔ Inserting a new InternalOrder
      ✔ Inserting a new InternalOrder
      ✔ Inserting a new InternalOrder
    GET /api/internalOrders
      ✔ Get all InternalOrders
    GET /api/internalOrders/:id
      ✔ Get InternalOrder by id
      ✔ Get InternalOrder by id
      ✔ Get InternalOrder by id
      ✔ Get InternalOrder by id
    GET /api/internalOrders/:id(erros)
      ✔ Get InternalOrder by id
      ✔ Get InternalOrder by id
    DELETE /api/internalOrders/:id(erros)
      ✔ Deleting a InternalOrder
      ✔ Deleting a InternalOrder
    PUT /api/internalOrders/:id/IO (success)
      ✔ Updating InternalOrder [id: 4] IO
    PUT /api/internalOrders/:id/IO (erros)
      ✔ Updating InternalOrder [id: should be a number] IO
      ✔ Updating InternalOrder [id: 114] IO
      ✔ Updating InternalOrder [id: 4] IO
    DELETE /api/sku
      ✔ Deleting a SKU
      ✔ Deleting a SKU
      ✔ Deleting a SKU
      ✔ Deleting a SKU
    DELETE /api/skuitems/:rfid (success)
      ✔ Deleting a SKU Item
    DELETE /api/internalOrders/:id(success)
      ✔ Deleting a InternalOrder
      ✔ Deleting a InternalOrder
      ✔ Deleting a InternalOrder
      ✔ Deleting a InternalOrder

  API Test: Item
    Removing all SKUs
      ✔ Getting SKUs
    Removing all Items
      ✔ Getting Items
    POST /api/sku
      ✔ Inserting a new SKU
      ✔ Inserting a new SKU
      ✔ Inserting a new SKU
      ✔ Inserting a new SKU
      ✔ Inserting a new SKU
    POST /api/items
      ✔ Inserting a new item
      ✔ Inserting a new item
      ✔ Inserting a new item
      ✔ Inserting a new item
    PUT /api/newUser
      ✔ Inserting a new User (93ms)
    POST /api/items (errors)
      ✔ Inserting a new item
      ✔ Inserting a new item
      ✔ Inserting a new item
      ✔ Inserting a new item
      ✔ Inserting a new item
      ✔ Inserting a new item
      ✔ Inserting a new item
      ✔ Inserting a new item
      ✔ Inserting a new item
      ✔ Inserting a new item
      ✔ Inserting a new item
      ✔ Inserting a new item
      ✔ Inserting a new item
      ✔ Inserting a new item
      ✔ Inserting a new item
    GET /api/items/:id
      ✔ Get item
      ✔ Get item
      ✔ Get item
      ✔ Get item
    GET /api/items
      ✔ Get all Items
    GET /api/items/:id (errors)
      ✔ Get item
      ✔ Get item
      ✔ Get item
      ✔ Get item
      ✔ Get item
      ✔ Get item
    UPDATE /api/items/:id(success)
      ✔ Updating item [id: 1] item
    UPDATE /api/items/:id(erros)
      ✔ Updating item [id: 1] item
      ✔ Updating item [id: 1] item
      ✔ Updating item [id: 1] item
      ✔ Updating item [id: 1] item
      ✔ Updating item [id: 1] item
      ✔ Updating item [id: 114] item
      ✔ Updating item [id: not a number] item
      ✔ Updating item [id: 4] item
    DELETE /api/items (errors)
      ✔ Deleting a item
      ✔ Deleting a item
      ✔ Deleting a item
    DELETE /api/sku
      ✔ Deleting a SKU
      ✔ Deleting a SKU
      ✔ Deleting a SKU
      ✔ Deleting a SKU
      ✔ Deleting a SKU
    DELETE /api/items
      ✔ Deleting a item
      ✔ Deleting a item
      ✔ Deleting a item
      ✔ Deleting a item
    DELETE /api/users/:username/:type
      ✔ Deleting a user

  API Test: Positions
    Removing all SKUs
      ✔ Getting SKUs
    Removing all Positions
      ✔ Getting Positions
    POST /api/position (success)
      ✔ Inserting a new position
      ✔ Inserting a new position
      ✔ Inserting a new position
      ✔ Inserting a new position
    POST /api/sku
      ✔ Inserting a new SKU
    PUT /api/sku/:id/position (success)
      ✔ Updating SKU [id: 1] position
    PUT /api/position/:positionID (success)
      ✔ Updating Position [id: 800234523411]
      ✔ Updating Position [id: 800234523412]
      ✔ Updating Position [id: 800234523413]
      ✔ Updating Position [id: 800234523414]
    POST /api/position (errors)
      ✔ Inserting a new position
      ✔ Inserting a new position
      ✔ Inserting a new position
      ✔ Inserting a new position
      ✔ Inserting a new position
      ✔ Inserting a new position
      ✔ Inserting a new position
      ✔ Inserting a new position
      ✔ Inserting a new position
      ✔ Inserting a new position
      ✔ Inserting a new position
    PUT /api/position/:positionID/changeID (errors)
      ✔ Updating Position ID [id: 80023452341]
      ✔ Updating Position ID [id: 800234523411]
      ✔ Updating Position ID [id: 800234523499]
      ✔ Updating Position ID [id: 800234523499]
      ✔ Updating Position ID [id: undefined]
      ✔ Updating Position ID [id: 800234523499]
    PUT /api/position/:positionID (errors)
      ✔ Updating Position [id: 80023452341]
      ✔ Updating Position [id: 800234523411]
      ✔ Updating Position [id: 800234523411]
      ✔ Updating Position [id: 800234523411]
      ✔ Updating Position [id: 800234523411]
      ✔ Updating Position ID [id: 800234523499]
      ✔ Updating Position ID [id: 800234523499]
    GET /api/positions
      ✔ Get all positions
    PUT /api/position/:positionID and /api/position/:positionID/changeID
      ✔ Updating Position [id: 800234523411]
    GET /api/positions (after updates)
      ✔ Get all positions
    DELETE /api/positions
      ✔ Deleting a SKU
      ✔ Deleting a SKU
      ✔ Deleting a SKU
    PUT /api/position/:positionID and /api/position/:positionID/changeID
      ✔ Updating Position ID [id: 800234523415]
    DELETE /api/sku
      ✔ Deleting a SKU
    DELETE /api/position/:positionID
      ✔ Deleting a position
      ✔ Deleting a position
      ✔ Deleting a position
      ✔ Deleting a position

  API Test: RESTOCK ORDER
    Removing all return orders
      ✔ Getting and removing
    Removing all Restock orders
      ✔ Getting and removing
    removing all test results
      ✔ Delete all test results associated to a certain rfid
    Removing all Test Descriptor
      ✔ Getting Test Descriptor
    removing all skuitems
      ✔ Getting SKUitems
    Removing all SKUs
      ✔ Getting SKUs
    Creating users...
      ✔ Inserting a new supplier (80ms)
      ✔ Inserting a new supplier (84ms)
    Creating SKUs...
      ✔ Inserting a new SKU
      ✔ Inserting a new SKU
    Creating SKU Items and test results...
      ✔ Inserting a new SKU Item
      ✔ Inserting a new SKU Item
      ✔ Inserting a new SKU Item
      ✔ Inserting a new SKU Item
      ✔ Inserting a new SKU Item
      ✔ Inserting a new SKU Item
      ✔ Inserting a new SKU Item
      ✔ Inserting a new SKU Item
      ✔ Inserting a new test descriptor
      ✔ Inserting a new test result
      ✔ Inserting a new test result
    Creating Items...
      ✔ Inserting a new Item
      ✔ Inserting a new Item
      ✔ Inserting a new Item
      ✔ Inserting a new Item
    POST /api/restockOrder (success)
      ✔ Inserting a new Restock Order (47ms)
      ✔ Inserting a new Restock Order (48ms)
      ✔ Inserting a new Restock Order (40ms)
      ✔ Inserting a new Restock Order (46ms)
      ✔ Updating Restock Order state [id = 3]
      ✔ Updating Restock Order state [id = 4]
    GET /api/restockOrders
      ✔ Get all Restock Orders
    GET /api/restockOrdersIssued
      ✔ Get all Restock Orders Issued
    GET /api/restockOrders/:id (success)
      ✔ Get Restock order with ID = 1
      ✔ Get Restock order with ID = 2
      ✔ Get Restock order with ID = 3
      ✔ Get Restock order with ID = 4
    GET /api/skus/:id (errors)
      ✔ Get Restock order with ID = 99
      ✔ Get Restock order with ID = undefined
      ✔ Get Restock order with ID = -1
    POST /api/restockOrder (errors)
      ✔ Inserting a new Restock Order
      ✔ Inserting a new Restock Order
      ✔ Inserting a new Restock Order
      ✔ Inserting a new Restock Order
      ✔ Inserting a new Restock Order
      ✔ Inserting a new Restock Order
      ✔ Inserting a new Restock Order
      ✔ Inserting a new Restock Order
      ✔ Inserting a new Restock Order
      ✔ Inserting a new Restock Order
      ✔ Inserting a new Restock Order
      ✔ Inserting a new Restock Order
      ✔ Inserting a new Restock Order
      ✔ Inserting a new Restock Order
      ✔ Inserting a new Restock Order
    PUT /api/restockOrder/:id (success)
      ✔ Updating Restock Order state [id = 2]
      ✔ Get all Restock Orders Issued
      ✔ Get Restock order with ID = 2
    PUT /api/restockOrder/:id (errors)
      ✔ Updating Restock Order state [id = undefined]
      ✔ Updating Restock Order state [id = 99]
      ✔ Updating Restock Order state [id = 10]
      ✔ Updating Restock Order state [id = -1]
      ✔ Updating Restock Order state [id = abc]
      ✔ Updating Restock Order state [id = 1]
      ✔ Updating Restock Order state [id = 1]
      ✔ Updating Restock Order state [id = 1]
      ✔ Updating Restock Order state [id = 1]
      ✔ Updating Restock Order state [id = 1]
    PUT /api/restockOrder/:id/skuItems (success)
      ✔ Adding Restock order [id: 2] SKU Item list
      ✔ Get Restock order with ID = 2
      ✔ Adding Restock order [id: 4] SKU Item list
      ✔ Get Restock order with ID = 4
      ✔ Adding Restock order [id: 4] SKU Item list
      ✔ Get Restock order with ID = 4
    PUT /api/restockOrder/:id/skuItems (errors)
      ✔ Adding Restock order [id: 1] SKU Item list
      ✔ Adding Restock order [id: 3] SKU Item list
      ✔ Adding Restock order [id: 3] SKU Item list
      ✔ Adding Restock order [id: undefined] SKU Item list
      ✔ Adding Restock order [id: 1] SKU Item list
      ✔ Adding Restock order [id: -1] SKU Item list
      ✔ Adding Restock order [id: 2] SKU Item list
      ✔ Adding Restock order [id: 2] SKU Item list
      ✔ Adding Restock order [id: 2] SKU Item list
      ✔ Adding Restock order [id: 2] SKU Item list
      ✔ Adding Restock order [id: 2] SKU Item list
      ✔ Adding Restock order [id: 2] SKU Item list
      ✔ Adding Restock order [id: 2] SKU Item list
      ✔ Adding Restock order [id: 2] SKU Item list
      ✔ Adding Restock order [id: 99] SKU Item list
    GET /api/restockOrders/:id/returnItems (success)
      ✔ Get Restock Order [2] SKU Items to be returned
    GET /api/restockOrders/:id/returnItems (errors)
      ✔ Get Restock Order [undefined] SKU Items to be returned
      ✔ Get Restock Order [-1] SKU Items to be returned
      ✔ Get Restock Order [not an int] SKU Items to be returned
      ✔ Get Restock Order [1] SKU Items to be returned
      ✔ Get Restock Order [3] SKU Items to be returned
      ✔ Get Restock Order [4] SKU Items to be returned
      ✔ Get Restock Order [99] SKU Items to be returned
      ✔ Get Restock Order [10] SKU Items to be returned
    PUT /api/restockOrder/:id/transportNote (success)
      ✔ Adding Restock Order [id: 3] transport note
      ✔ Get Restock order with ID = 3
    PUT /api/restockOrder/:id/transportNote (errors)
      ✔ Adding Restock Order [id: undefined] transport note
      ✔ Adding Restock Order [id: -1] transport note
      ✔ Adding Restock Order [id: not an int] transport note
      ✔ Adding Restock Order [id: 3] transport note
      ✔ Adding Restock Order [id: 3] transport note
      ✔ Adding Restock Order [id: 3] transport note
      ✔ Adding Restock Order [id: 3] transport note
      ✔ Adding Restock Order [id: 3] transport note
      ✔ Adding Restock Order [id: 3] transport note
      ✔ Adding Restock Order [id: 3] transport note
      ✔ Adding Restock Order [id: 99] transport note
    DELETE /api/restockOrder/:id (success)
      ✔ Deleting Restock Order [id = 1]
      ✔ Deleting Restock Order [id = 2] (45ms)
      ✔ Deleting Restock Order [id = 3] (43ms)
      ✔ Deleting Restock Order [id = 4]
    DELETE /api/restockOrder/:id (errors)
      ✔ Deleting Restock Order [id = undefined]
      ✔ Deleting Restock Order [id = 99]
      ✔ Deleting Restock Order [id = -1]
      ✔ Deleting Restock Order [id = id must be an int]
      ✔ Deleting Restock Order [id = 2]
    Deleting Items...
      ✔ Deleting an Item
      ✔ Deleting an Item
      ✔ Deleting an Item
      ✔ Deleting an Item
    Deleting SKU Items and test results...
      ✔ Deleting a test descriptor
      ✔ Deleting a test result
      ✔ Deleting a test result
      ✔ Deleting a SKU Item
      ✔ Deleting a SKU Item
      ✔ Deleting a SKU Item
      ✔ Deleting a SKU Item
      ✔ Deleting a SKU Item
      ✔ Deleting a SKU Item
      ✔ Deleting a SKU Item
      ✔ Deleting a SKU Item
    Deleting SKUs...
      ✔ Deleting a SKU
      ✔ Deleting a SKU
    Deleting users...
      ✔ Deleting a supplier
      ✔ Deleting a supplier

  API Test: RETURN ORDER
    removing all test results
      ✔ Delete all test results associated to a certain rfid
    Removing all Test Descriptor
      ✔ Getting Test Descriptor
    Removing all return orders
      ✔ Getting and removing
    Removing all Restock orders
      ✔ Getting and removing
    removing all skuitems
      ✔ Getting SKUitems
    Removing all Items
      ✔ Getting Items
    Removing all SKUs
      ✔ Getting SKUs
    Populating DB...
      ✔ Inserting a new supplier (85ms)
      ✔ Inserting a new SKU
      ✔ Inserting a new SKU
      ✔ Inserting a new Item
      ✔ Inserting a new Item
      ✔ Inserting a new Item
      ✔ Inserting a new Item
      ✔ Inserting a new SKU Item
      ✔ Inserting a new SKU Item
      ✔ Inserting a new SKU Item
      ✔ Inserting a new SKU Item
      ✔ Inserting a new test descriptor
      ✔ Inserting a new test result
      ✔ Inserting a new test result
      ✔ Inserting a new Restock Order (56ms)
      ✔ Updating Restock Order state [id = 1]
      ✔ Adding Restock order [id: 1] SKU Item list
      ✔ Inserting a new Restock Order (47ms)
      ✔ Updating Restock Order state [id = 2]
      ✔ Adding Restock order [id: 2] SKU Item list
    POST /api/returnOrder (success)
      ✔ Inserting a new Return Order
      ✔ Inserting a new Return Order
    POST /api/returnOrder (error test)
      ✔ Inserting a new Return Order
      ✔ Inserting a new Return Order
      ✔ Inserting a new Return Order
      ✔ Inserting a new Return Order
      ✔ Inserting a new Return Order
      ✔ Inserting a new Return Order
      ✔ Inserting a new Return Order
      ✔ Inserting a new Return Order
      ✔ Inserting a new Return Order
      ✔ Inserting a new Return Order
      ✔ Inserting a new Return Order
      ✔ Inserting a new Return Order
      ✔ Inserting a new Return Order
      ✔ Inserting a new Return Order
      ✔ Inserting a new Return Order
    GET /api/returnOrders
      ✔ Get All Return order 
    GET /api/returnOrders/:id (success)
      ✔ Get All Return order 
    GET /api/returnOrders/:id (error test)
      ✔ Get All Return order 
      ✔ Get All Return order 
      ✔ Get All Return order 
      ✔ Get All Return order 
    DELETE /api/returnOrder/:id (error test)
      ✔ Deleting Return Order [id = 12]
      ✔ Deleting Return Order [id = abc]
      ✔ Deleting Return Order [id = -12]
      ✔ Deleting Return Order [id = undefined]
    Restoring db
      ✔ Deleting Restock Order [id = 1] (47ms)
      ✔ Deleting Restock Order [id = 2] (41ms)
      ✔ Deleting a test result
      ✔ Deleting a test result
      ✔ Deleting a test descriptor
      ✔ Deleting a SKU Item
      ✔ Deleting a SKU Item
      ✔ Deleting a SKU Item
      ✔ Deleting a SKU Item
      ✔ Deleting an Item
      ✔ Deleting an Item
      ✔ Deleting an Item
      ✔ Deleting an Item
      ✔ Deleting a SKU
      ✔ Deleting a SKU
      ✔ Deleting a supplier
      ✔ Deleting Return Order [id = 1]
      ✔ Deleting Return Order [id = 2]

  API Test: SKU
    Removing all SKUs
      ✔ Getting SKUs
    Removing all Positions
      ✔ Getting Positions
    Removing all Test Descriptor
      ✔ Getting Test Descriptor
    POST /api/position
      ✔ Inserting a new position
      ✔ Inserting a new position
      ✔ Inserting a new position
      ✔ Inserting a new position
    POST /api/sku
      ✔ Inserting a new SKU
      ✔ Inserting a new SKU
      ✔ Inserting a new SKU
      ✔ Inserting a new SKU
    PUT /api/sku/:id/position (success)
      ✔ Updating SKU [id: 1] position
      ✔ Updating SKU [id: 2] position
      ✔ Updating SKU [id: 3] position
      ✔ Updating SKU [id: 4] position
    PUT /api/testDescriptor
      ✔ Inserting a new test descriptor
      ✔ Inserting a new test descriptor
    POST /api/skus (errors)
      ✔ Inserting a new SKU
      ✔ Inserting a new SKU
      ✔ Inserting a new SKU
      ✔ Inserting a new SKU
      ✔ Inserting a new SKU
      ✔ Inserting a new SKU
      ✔ Inserting a new SKU
      ✔ Inserting a new SKU
      ✔ Inserting a new SKU
      ✔ Inserting a new SKU
    GET /api/skus
      ✔ Get all SKUs
    GET /api/skus/:id
      ✔ Get SKU
      ✔ Get SKU
      ✔ Get SKU
      ✔ Get SKU
    GET /api/skus/:id (errors)
      ✔ Get SKU
      ✔ Get SKU
      ✔ Get SKU
      ✔ Get SKU
      ✔ Get SKU
      ✔ Get SKU
    PUT /api/sku/:id/position (errors)
      ✔ Updating SKU [id: undefined] position
      ✔ Updating SKU [id: 1] position
      ✔ Updating SKU [id: 1] position
      ✔ Updating SKU [id: 100] position
      ✔ Updating SKU [id: ID must be an int] position
      ✔ Updating SKU [id: 3] position
      ✔ Updating SKU [id: 3] position
      ✔ Updating SKU [id: 3] position
      ✔ Updating SKU [id: 3] position
      ✔ Updating SKU [id: 3] position
    DELETE /api/sku (errors)
      ✔ Deleting a SKU
      ✔ Deleting a SKU
      ✔ Deleting a SKU
    DELETE /api/sku
      ✔ Deleting a SKU
      ✔ Deleting a SKU
      ✔ Deleting a SKU
      ✔ Deleting a SKU
    DELETE /api/position/:positionID
      ✔ Deleting a position
      ✔ Deleting a position
      ✔ Deleting a position
      ✔ Deleting a position
    DELETE /api/position/:positionID
      ✔ Deleting a test descriptor
      ✔ Deleting a test descriptor

  API Test: SKU Items
    removing all skuitems
      ✔ Getting SKUitems
    Removing all SKUs
      ✔ Getting SKUs
    Removing all Positions
      ✔ Getting Positions
    POST /api/position
      ✔ Inserting a new position
    POST /api/sku
      ✔ Inserting a new SKU
    PUT /api/sku/:id/position (success)
      ✔ Updating SKU [id: 1] position
    POST /api/skuitem (success)
      ✔ Inserting a new SKU Item
      ✔ Inserting a new SKU Item
      ✔ Inserting a new SKU Item
      ✔ Inserting a new SKU Item
    POST /api/skuitem (errors)
      ✔ Inserting a new SKU Item
      ✔ Inserting a new SKU Item
      ✔ Inserting a new SKU Item
      ✔ Inserting a new SKU Item
      ✔ Inserting a new SKU Item
      ✔ Inserting a new SKU Item
      ✔ Inserting a new SKU Item
      ✔ Inserting a new SKU Item
      ✔ Inserting a new SKU Item
      ✔ Inserting a new SKU Item
      ✔ Inserting a new SKU Item
      ✔ Inserting a new SKU Item
      ✔ Inserting a new SKU Item
      ✔ Inserting a new SKU Item
      ✔ Inserting a new SKU Item
    GET /api/skus
      ✔ Get all SKU Items
    GET /api/skuitems/sku/:id (success)
      ✔ Get SKU Items by SKU ID
    GET /api/skuitems/sku/:id (errors)
      ✔ Get SKU Items by SKU ID
      ✔ Get SKU Items by SKU ID
      ✔ Get SKU Items by SKU ID
      ✔ Get SKU Items by SKU ID
      ✔ Get SKU Items by SKU ID
    GET /api/skuitems/:id (success)
      ✔ Get SKU Item by RFID
      ✔ Get SKU Item by RFID
      ✔ Get SKU Item by RFID
      ✔ Get SKU Item by RFID
    GET /api/skus/:id (errors)
      ✔ Get SKU Item by RFID
      ✔ Get SKU Item by RFID
      ✔ Get SKU Item by RFID
      ✔ Get SKU Item by RFID
      ✔ Get SKU Item by RFID
    PUT /api/skuitems/:rfid (success)
      ✔ Updating SKU Item [RFID: 12345678901234567890123456789011]
      ✔ Updating SKU Item [RFID: 12345678901234567890123456789012]
      ✔ Updating SKU Item [RFID: 12345678901234567890123456789013]
      ✔ Updating SKU Item [RFID: 12345678901234567890123456789014]
      ✔ Get SKU Items by SKU ID
      ✔ Updating SKU Item [RFID: 12345678901234567890123456789011]
      ✔ Get SKU Item by RFID
    PUT /api/skuitems/:rfid (errors)
      ✔ Updating SKU Item [RFID: 1234567890123456789012345678901]
      ✔ Updating SKU Item [RFID: 123456789012345678901234567890113]
      ✔ Updating SKU Item [RFID: 12345678901234567890123456789011]
      ✔ Updating SKU Item [RFID: 1234567890123456789012345678901]
      ✔ Updating SKU Item [RFID: 12345678901234567890123456789011]
      ✔ Updating SKU Item [RFID: 12345678901234567890123456789011]
      ✔ Updating SKU Item [RFID: 12345678901234567890123456789011]
      ✔ Updating SKU Item [RFID: 12345678901234567890123456789011]
      ✔ Updating SKU Item [RFID: 12345678901234567890123456789011]
      ✔ Updating SKU Item [RFID: 12345678901234567890123456789011]
      ✔ Updating SKU Item [RFID: 12345678901234567890123456789011]
      ✔ Updating SKU Item [RFID: 12345678901234567890123456789011]
      ✔ Updating SKU Item [RFID: 12345678901234567890123456789015]
      ✔ Updating SKU Item [RFID: 12345678901234567890123456789099]
    DELETE /api/sku (errors)
      ✔ Deleting a SKU Item
      ✔ Deleting a SKU Item
      ✔ Deleting a SKU Item
      ✔ Deleting a SKU Item
      ✔ Deleting a SKU Item
    DELETE /api/skuitems/:rfid (success)
      ✔ Deleting a SKU Item
      ✔ Deleting a SKU Item
      ✔ Deleting a SKU Item
      ✔ Deleting a SKU Item
    DELETE /api/sku
      ✔ Deleting a SKU
    DELETE /api/position
      ✔ Deleting a position

  API Test: Test Descriptors
    Removing all Test Descriptor
      ✔ Getting Test Descriptor
    Removing all SKUs
      ✔ Getting SKUs
    POST /api/sku
      ✔ Inserting a new SKU
    PUT /api/testDescriptor (success)
      ✔ Inserting a new test descriptor
      ✔ Inserting a new test descriptor
      ✔ Inserting a new test descriptor
      ✔ Inserting a new test descriptor
    POST /api/testDescriptor (errors)
      ✔ Inserting a new test descriptor
      ✔ Inserting a new test descriptor
      ✔ Inserting a new test descriptor
      ✔ Inserting a new test descriptor
      ✔ Inserting a new test descriptor
      ✔ Inserting a new test descriptor
      ✔ Inserting a new test descriptor
      ✔ Inserting a new test descriptor
      ✔ Inserting a new test descriptor
    GET /api/testDescriptors
      ✔ Get all Test Descriptors
    GET /api/testDescriptors/:id
      ✔ Get Test Descriptor [id: 1]
      ✔ Get Test Descriptor [id: 2]
      ✔ Get Test Descriptor [id: 3]
      ✔ Get Test Descriptor [id: 4]
    GET /api/testDescriptors/:id (errors)
      ✔ Get Test Descriptor [id: 99]
      ✔ Get Test Descriptor [id: -1]
      ✔ Get Test Descriptor [id: undefined]
    PUT /api/testDescriptor/:id (success)
      ✔ Updating Test Descriptor [id: 1]
      ✔ Updating Test Descriptor [id: 2]
    PUT /api/testDescriptor/:id (errors)
      ✔ Updating Test Descriptor [id: 99]
      ✔ Updating Test Descriptor [id: 1]
      ✔ Updating Test Descriptor [id: -1]
      ✔ Updating Test Descriptor [id: 1]
      ✔ Updating Test Descriptor [id: 1]
      ✔ Updating Test Descriptor [id: 1]
      ✔ Updating Test Descriptor [id: 1]
      ✔ Updating Test Descriptor [id: 1]
      ✔ Updating Test Descriptor [id: 1]
    DELETE /api/testDescriptor/:id (errors)
      ✔ Deleting a test descriptor
      ✔ Deleting a test descriptor
      ✔ Deleting a test descriptor
      ✔ Deleting a test descriptor
    DELETE /api/testDescriptor/:id (success) 
      ✔ Deleting a test descriptor
      ✔ Deleting a test descriptor
      ✔ Deleting a test descriptor
      ✔ Deleting a test descriptor
    DELETE /api/sku
      ✔ Deleting a SKU

  API Test: Test Result
    removing all test results
      ✔ Delete all test results associated to a certain rfid
    removing all skuitems
      ✔ Getting SKUitems
    Removing all Test Descriptor
      ✔ Getting Test Descriptor
    Removing all SKUs
      ✔ Getting SKUs
    POST /api/sku
      ✔ Inserting a new SKU
    POST /api/skuitem (success)
      ✔ Inserting a new SKU Item
      ✔ Inserting a new SKU Item
      ✔ Inserting a new SKU Item
      ✔ Inserting a new SKU Item
    POST /api/testDescriptor (success)
      ✔ Inserting a new test descriptor
      ✔ Inserting a new test descriptor
      ✔ Inserting a new test descriptor
      ✔ Inserting a new test descriptor
    POST /api/skuitems/testResult (success)
      ✔ Inserting a new test result
      ✔ Inserting a new test result
      ✔ Inserting a new test result
      ✔ Inserting a new test result
    GET /api/skuitems/:rfid/testResults
      ✔ Get Test Result
    GET /api/skuitems/:rfid/testResults (error test)
      ✔ Get Test Result
      ✔ Get Test Result
      ✔ Get Test Result
      ✔ Get Test Result
      ✔ Get Test Result
      ✔ Get Test Result
    GET /api/skuitems/:rfid/testResults/:id
      ✔ Get Test Result by ID
    GET /api/skuitems/:rfid/testResults/:id (error test)
      ✔ Get Test Result by ID
      ✔ Get Test Result by ID
      ✔ Get Test Result by ID
      ✔ Get Test Result by ID
      ✔ Get Test Result by ID
      ✔ Get Test Result by ID
      ✔ Get Test Result by ID
      ✔ Get Test Result by ID
    POST /api/skuitems/testResult (error test)
      ✔ Inserting a new test result
      ✔ Inserting a new test result
      ✔ Inserting a new test result
      ✔ Inserting a new test result
      ✔ Inserting a new test result
      ✔ Inserting a new test result
      ✔ Inserting a new test result
      ✔ Inserting a new test result
      ✔ Inserting a new test result
      ✔ Inserting a new test result
      ✔ Inserting a new test result
      ✔ Inserting a new test result
      ✔ Inserting a new test result
      ✔ Inserting a new test result
    PUT /api/skuitems/:rfid/testResult/:id (success)
      ✔ Updating Test Result:
    PUT /api/skuitems/:rfid/testResult/:id (errors test)
      ✔ Updating Test Result:
      ✔ Updating Test Result:
      ✔ Updating Test Result:
      ✔ Updating Test Result:
      ✔ Updating Test Result:
      ✔ Updating Test Result:
      ✔ Updating Test Result:
      ✔ Updating Test Result:
      ✔ Updating Test Result:
      ✔ Updating Test Result:
      ✔ Updating Test Result:
      ✔ Updating Test Result:
      ✔ Updating Test Result:
      ✔ Updating Test Result:
      ✔ Updating Test Result:
      ✔ Updating Test Result:
      ✔ Updating Test Result:
      ✔ Updating Test Result:
    DELETE /api/skuitems/:rfid/testResult/:id (error test)
      ✔ Deleting a test result
      ✔ Deleting a test result
      ✔ Deleting a test result
      ✔ Deleting a test result
      ✔ Deleting a test result
      ✔ Deleting a test result
      ✔ Deleting a test result
    DELETE /api/skuitems/:rfid/testResult/:id (success)
      ✔ Deleting a test result
      ✔ Deleting a test result
      ✔ Deleting a test result
      ✔ Deleting a test result
    DELETE /api/testDescriptor/:id (success) 
      ✔ Deleting a test descriptor
      ✔ Deleting a test descriptor
      ✔ Deleting a test descriptor
      ✔ Deleting a test descriptor
    DELETE /api/skuitems/:rfid (success)
      ✔ Deleting a SKU Item
      ✔ Deleting a SKU Item
      ✔ Deleting a SKU Item
      ✔ Deleting a SKU Item
    DELETE /api/sku
      ✔ Deleting a SKU

  API Test: User
    POST /api/newUser
      ✔ Inserting a new User (77ms)
      ✔ Inserting a new User (85ms)
    POST /api/newUser (error test)
      ✔ Inserting a new User
      ✔ Inserting a new User
      ✔ Inserting a new User
      ✔ Inserting a new User
      ✔ Inserting a new User
      ✔ Inserting a new User
      ✔ Inserting a new User
      ✔ Inserting a new User
      ✔ Inserting a new User
    GET /api/suppliers
      ✔ Get all Suppliers
    GET /api/users
      ✔ Get all users
    POST /api/newUser (success - check all possible user types)
      ✔ Inserting a new User (78ms)
      ✔ Inserting a new User (84ms)
      ✔ Inserting a new User (84ms)
    POST /api/managerSessions (manager Login)
      ✔ Login user (62ms)
      ✔ Login user (61ms)
      ✔ Login user
    POST /api/customerSessions (customer Login)
      ✔ Login user (60ms)
      ✔ Login user (64ms)
      ✔ Login user
    POST /api/supplierSessions (supplier Login)
      ✔ Login user (61ms)
      ✔ Login user (62ms)
      ✔ Login user
    POST /api/clerkSessions (clerk Login)
      ✔ Login user (60ms)
      ✔ Login user (61ms)
      ✔ Login user
    POST /api/qualityEmployeeSessions (quality Employee Login)
      ✔ Login user (61ms)
      ✔ Login user (61ms)
      ✔ Login user
    POST /api/deliveryEmployeeSessions (delivery Employee Login)
      ✔ Login user (60ms)
      ✔ Login user (61ms)
      ✔ Login user
    PUT /api/users/:username (error test)
      ✔ Updating User rights:
      ✔ Updating User rights:
      ✔ Updating User rights:
      ✔ Updating User rights:
      ✔ Updating User rights:
      ✔ Updating User rights:
      ✔ Updating User rights:
    PUT /api/users/:username (success)
      ✔ Updating User rights:
    DELETE /api/users/:username/:type (error test)
      ✔ Deleting a user
      ✔ Deleting a user
      ✔ Deleting a user
      ✔ Deleting a user
      ✔ Deleting a user
      ✔ Deleting a user
    DELETE /api/users/:username/:type (success)
      ✔ Deleting a user
      ✔ Deleting a user
      ✔ Deleting a user
      ✔ Deleting a user
      ✔ Deleting a user


  684 passing (7s)

